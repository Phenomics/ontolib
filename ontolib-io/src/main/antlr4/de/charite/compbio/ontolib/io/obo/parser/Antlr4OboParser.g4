/** ANTLR 4 grammar for the OBO v1.2 ontology description format.
 *
 * See <a href="http://owlcollab.github.io/oboformat/doc/GO.format.obo-1_2.html">The OBO Flat File
 * Format Specification, version 1.2 </a> for details.
 *
 * @author <a href="mailto:manuel.holtgrewe@bihealth.de">Manuel Holtgrewe</a>
 */
parser grammar Antlr4OboParser;

options {
  tokenVocab = Antlr4OboLexer;
} // use tokens from Antlr4OboLexer

oboFile
:
  header eolComment+ stanzas
;

header
:
  headerKeyValue+
;

headerKeyValue
:
  keyValueFormatVersion
  | keyValueDataVersion
  | keyValueDate
  | keyValueSavedBy
  | keyValueAutoGeneratedBy
  | keyValueSubsetdef
  | keyValueImport
  | keyValueSynonymtypedef
  | keyValueIdspace
  | keyValueDefaultRelationshipIdPrefix
  | keyValueIdMapping
  | keyValueRemark
  | keyValueGeneric
;

eolComment
:
  Comment? Eol
;

stanzas
:
  stanza
  (
    eolComment+ stanza
  )* eolComment*
;

stanza
:
  termStanza
  | typedefStanza
  | instanceStanza
;

termStanza
:
  TermStanzaHeader eolComment termStanzaKeyValue+
;

termStanzaKeyValue
:
  keyValueId
  | keyValueName
  | keyValueIsAnonymous
  | keyValueAltId
  | keyValueDef
  | keyValueComment
  | keyValueSubset
  | keyValueSynonym
  | keyValueXref
  | keyValueIsA
  | keyValueIntersectionOf
  | keyValueUnionOf
  | keyValueDisjointFrom
  | keyValueRelationship
  | keyValueIsObsolete
  | keyValueReplacedBy
  | keyValueConsider
  | keyValueCreatedBy
  | keyValueCreationDate
  | keyValueGeneric
;

typedefStanza
:
  TypedefStanzaHeader eolComment
;

typedefStanzaKeyValue
:
  keyValueId
  | keyValueName
  | keyValueIsAnonymous
  | keyValueAltId
  | keyValueDef
  | keyValueComment
  | keyValueSubset
  | keyValueSynonym
  | keyValueXref
  | keyValueIsA
  | keyValueIsObsolete
  | keyValueReplacedBy
  | keyValueConsider
  | keyValueCreatedBy
  | keyValueCreationDate
  | keyValueGeneric
  | keyValueDomain
  | keyValueRange
  | keyValueInverseOf
  | keyValueTransitiveOver
  | keyValueIsCyclic
  | keyValueIsReflexive
  | keyValueIsSymmetric
  | keyValueIsAntisymmetric
  | keyValueIsTransitive
  | keyValueIsMetadata
;

instanceStanza
:
  InstanceStanzaHeader eolComment
;

instanceStanzaKeyValue
:
  keyValueId
  | keyValueName
  | keyValueInstanceOf
  | keyValueIsAnonymous
  | keyValueAltId
  | keyValueComment
  | keyValueSynonym
  | keyValueXref
  | keyValueIsObsolete
  | keyValueReplacedBy
  | keyValueGeneric
;

stringValue
:
  (
    Esc2
    | BooleanValue
    | SquareBraceOpen
    | CurlyBraceClose
    | SquareBraceOpen
    | SquareBraceClose
    | Equals
    | Comma
    | Semicolon
    | Space
    | Word
    | QuotedString
  )+
;

eolComment2
:
  Comment2? Eol2
;

keyValueId
:
  TagID ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueName
:
  TagName ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueIsAnonymous
:
  TagIsAnonymous ColonSpace BooleanValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueAltId
:
  TagAltId ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueDef
: // note the mandatory dbXrefList here
  TagDef ColonSpace QuotedString Space dbXrefList
  (
    Space trailingModifier
  )? eolComment2
;

keyValueComment
:
  TagComment ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueSubset
:
  TagSubset ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueSynonym
:
  TagSynonym ColonSpace QuotedString Space ScopeIdentifier
  (
    Space extWord
  )?
  (
    Space dbXrefList
  )?
  (
    Space trailingModifier
  )? eolComment2
;

// Note that the trailingModifier for keyValueXref comes straight from the dbXref (for now).

keyValueXref
:
  TagXref ColonSpace dbXref
  // (Space trailingModifier )?
  eolComment2
;

keyValueIsA
:
  TagIsA ColonSpace extWord
  (
    Space trailingModifier
  )? eolComment2
;

keyValueIntersectionOf
:
  TagIntersectionOf ColonSpace
  (
    extWord Space
  )? extWord
  (
    Space trailingModifier
  )? eolComment2
;

keyValueUnionOf
:
  TagUnionOf ColonSpace extWord
  (
    Space trailingModifier
  )? eolComment2
;

keyValueDisjointFrom
:
  TagDisjointFrom ColonSpace extWord
  (
    Space trailingModifier
  )? eolComment2
;

keyValueRelationship
:
  TagRelationship ColonSpace extWord Space extWord
  (
    Space extWord
  )*
  (
    Space trailingModifier
  )? eolComment2
;

keyValueIsObsolete
:
  TagIsObsolete ColonSpace BooleanValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueReplacedBy
:
  TagReplacedBy ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueConsider
:
  TagConsider ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueCreatedBy
:
  TagCreatedBy ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueCreationDate
:
  TagCreationDate ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueGeneric
:
  GenericStanzaTag ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueDomain
:
  TagDomain ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueRange
:
  TagRange ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueInverseOf
:
  TagInverseOf ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueTransitiveOver
:
  TagTransitiveOver ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueIsCyclic
:
  TagIsCyclic ColonSpace BooleanValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueIsReflexive
:
  TagIsReflexive ColonSpace BooleanValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueIsSymmetric
:
  TagIsSymmetric ColonSpace BooleanValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueIsAntisymmetric
:
  TagIsAntisymmetric ColonSpace BooleanValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueIsTransitive
:
  TagIsTransitive ColonSpace BooleanValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueIsMetadata
:
  TagIsMetadata ColonSpace BooleanValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueInstanceOf
:
  TagInstanceOf ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueFormatVersion
:
  TagFormatVersion ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueDataVersion
:
  TagDataVersion ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueDate
:
  TagDate ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueSavedBy
:
  TagSavedBy ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueAutoGeneratedBy
:
  TagAutoGeneratedBy ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueSubsetdef
:
  TagSubsetdef ColonSpace extWord Space QuotedString
  (
    Space trailingModifier
  )? eolComment2
;

keyValueImport
:
  TagImport ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

keyValueSynonymtypedef
:
  TagSynonymtypedef ColonSpace extWord Space QuotedString
  (
    Space ScopeIdentifier
  )?
  (
    Space trailingModifier
  )? eolComment2
;

keyValueIdspace
:
  TagIdspace ColonSpace extWord Space extWord Space QuotedString
  (
    Space trailingModifier
  )? eolComment2
;

keyValueDefaultRelationshipIdPrefix
:
  TagDefaultRelationshipIdPrefix ColonSpace extWord
  (
    Space trailingModifier
  )? eolComment2
;

keyValueIdMapping
:
  TagIdMapping ColonSpace extWord Space extWord
  (
    Space trailingModifier
  )? eolComment2
;

keyValueRemark
:
  TagRemark ColonSpace stringValue
  (
    Space trailingModifier
  )? eolComment2
;

// Trailing modifier definition

trailingModifier
:
  CurlyBraceOpen
  (
    trailingModifierKeyValue
    (
      Comma Space* trailingModifierKeyValue
    )*
  )? CurlyBraceClose
;

trailingModifierKeyValue
:
  Word Equals
  (
    Word
    | QuotedString
  )
;

// dbxrefs

dbXrefList
:
  SquareBraceOpen
  (
    dbXref
    (
      (
        Comma
        | Semicolon
      ) Space* dbXref
    )*
  )? SquareBraceClose
;

dbXref
:
  dbXrefWord
  (
    Space QuotedString
  )?
  (
    Space trailingModifier
  )?
;

// Similar to Word, but allowing equal signs. Equal signs only need to be forbidden in trailing modifiers.

extWord
:
  (
    Word
    | Equals
  )+
;

// Similar to extWord but also allowing square brace open.

dbXrefWord
:
  (
    Word
    | Equals
    | SquareBraceOpen
    | Semicolon
  )
  (
    Space?
    Word
    | Equals
    | SquareBraceOpen
    | Semicolon
  )*
;
